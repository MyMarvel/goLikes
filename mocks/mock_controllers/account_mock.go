// Code generated by MockGen. DO NOT EDIT.
// Source: account.go

// Package mock_controllers is a generated GoMock package.
package mock_controllers

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIAccount is a mock of IAccount interface.
type MockIAccount struct {
	ctrl     *gomock.Controller
	recorder *MockIAccountMockRecorder
}

// MockIAccountMockRecorder is the mock recorder for MockIAccount.
type MockIAccountMockRecorder struct {
	mock *MockIAccount
}

// NewMockIAccount creates a new mock instance.
func NewMockIAccount(ctrl *gomock.Controller) *MockIAccount {
	mock := &MockIAccount{ctrl: ctrl}
	mock.recorder = &MockIAccountMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAccount) EXPECT() *MockIAccountMockRecorder {
	return m.recorder
}

// GetLikesCount mocks base method.
func (m *MockIAccount) GetLikesCount(arg0 string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLikesCount", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLikesCount indicates an expected call of GetLikesCount.
func (mr *MockIAccountMockRecorder) GetLikesCount(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLikesCount", reflect.TypeOf((*MockIAccount)(nil).GetLikesCount), arg0)
}

// IncrementLikeCounter mocks base method.
func (m *MockIAccount) IncrementLikeCounter(arg0 string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncrementLikeCounter", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IncrementLikeCounter indicates an expected call of IncrementLikeCounter.
func (mr *MockIAccountMockRecorder) IncrementLikeCounter(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrementLikeCounter", reflect.TypeOf((*MockIAccount)(nil).IncrementLikeCounter), arg0)
}

// IsAccountLikes mocks base method.
func (m *MockIAccount) IsAccountLikes(arg0 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsAccountLikes", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IsAccountLikes indicates an expected call of IsAccountLikes.
func (mr *MockIAccountMockRecorder) IsAccountLikes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsAccountLikes", reflect.TypeOf((*MockIAccount)(nil).IsAccountLikes), arg0)
}
